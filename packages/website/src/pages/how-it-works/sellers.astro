---
import { Image } from "astro:assets";
import Shape from "@/components/Shape.astro";
import Base from "@/layouts/Base.astro";
import Cta from "@/layouts/partials/Cta.astro";
import { getEntry } from "astro:content";
import * as Icon from "react-feather";

const how_it_works = await getEntry("how-it-works", "index");
const { sellers_steps, seller_benefits } = how_it_works.data;
const page_title = "How It Works for Sellers";

// Icon mapping for benefits
const iconMap: { [key: string]: any } = {
  "Quick Liquidity Access": Icon.Zap,
  "Operational Control Retained": Icon.Users,
  "Shariah-Compliant Structure": Icon.Lock,
};
---

<Base title={page_title}>
  <Shape />

  <!-- Sellers Section -->
  <section class="page-hero pb-14 pt-16">
    <div class="container">
      <div class="page-hero-content mx-auto max-w-[883px] text-center mb-10">
        <h2 class="text-4xl font-bold mb-4">{page_title}</h2>
        <p class="text-lg text-muted">
          Turn your Ar-Rahnu receivables into liquidity
        </p>
      </div>

      <div class="row mt-14">
        {
          sellers_steps.map((item: any, i: number) => (
            <div class="mt-10 text-center sm:col-6 md:col-3 md:mb-0">
              <div
                class={`relative mx-auto mb-8 flex h-[184px] w-[184px] items-center justify-center rounded-xl bg-white p-4 shadow-lg ${
                  sellers_steps.length - 1 !== i
                    ? "after:absolute after:-right-4 after:-z-[1] after:hidden after:w-full after:translate-x-full after:border-b-2 after:border-dashed after:border-primary/50 after:content-[''] md:after:block"
                    : undefined
                }`}
              >
                <Image height={122} width={144} src={item.image} alt="" />
              </div>
              <h2 class="h5">{item.title}</h2>
              <p class="mt-4">{item.description}</p>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Sellers Benefits -->
  <section class="py-16 bg-gradient-to-b from-blue-50 to-blue-100">
    <div class="container">
      <div class="text-center mb-12">
        <h2 class="text-4xl font-bold mb-4">Why Partner with Liquid?</h2>
        <p class="text-lg text-muted">Benefits designed for sellers</p>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-10">
        {
          seller_benefits.map((item: any) => (
            <div class="flex flex-col justify-between rounded-xl bg-white px-10 py-6 shadow-lg hover:shadow-xl transition">
              <div>
                <h3 class="text-lg lg:text-xl font-bold text-gray-900 mb-3">
                  {item.title}
                </h3>
                <p class="text-sm lg:text-base text-gray-600 leading-relaxed mb-4">
                  {item.description}
                </p>
                <ul class="list-unstyled">
                  {item.list.map((list: any) => (
                    <li class="mb-2 flex items-start text-sm text-gray-600">
                      <span class="text-primary mr-2">â€¢</span>
                      <span>{list}</span>
                    </li>
                  ))}
                </ul>
              </div>
              <div class="mt-3">
                {(() => {
                  const IconComponent = iconMap[item.title];
                  return IconComponent ? (
                    <IconComponent size={24} className="text-primary" />
                  ) : null;
                })()}
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <Cta />
</Base>

<style>
  .requirement-box {
    padding: 2rem;
    background: white;
    border-radius: 0.75rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .requirement-box::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(
      90deg,
      var(--primary-color, #007bff),
      var(--secondary-color, #6c757d)
    );
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease;
  }

  .requirement-box:hover {
    box-shadow: 0 4px 16px rgba(0, 123, 255, 0.15);
    transform: translateY(-4px);
  }

  .requirement-box:hover::before {
    transform: scaleX(1);
  }

  .requirement-icon {
    font-size: 2.5rem;
    color: var(--primary-color, #007bff);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 60px;
    height: 60px;
    background: rgba(0, 123, 255, 0.1);
    border-radius: 0.5rem;
    transition: all 0.3s ease;
  }

  .requirement-box:hover .requirement-icon {
    transform: rotate(10deg) scale(1.1);
    background: rgba(0, 123, 255, 0.2);
  }

  .requirement-box h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1a1a1a;
  }

  .requirement-box ul li {
    color: #555;
    font-size: 0.95rem;
  }
</style>
